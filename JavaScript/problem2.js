/* Project Euler: Problem 2 - Even Fibonacci Numbers 
   https://projecteuler.net/problem=2

   Each new term in the Fibonacci sequence is generated by adding the previous
   two terms. 

   By starting with 1 and 2, the first 10 terms will be:

   		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not 
   exceed four million, find the sum of the even-valued terms. 
*/

var sum = 0,
    num = 0,
    fibVal = 0;

var fibo = function(digit) {
  'use strict';
  if (!fibo.cache[digit]) {
    var result = {};
    result = (digit === 0) ? 0 :
             (digit === 1) ? 1 :
             fibo(digit - 1) + fibo(digit - 2);
    fibo.cache[digit] = result;
  }
  return fibo.cache[digit];
};

// Add 'cache' object as a property of the function
fibo.cache = {};

// Loop to sum all even Fibonacci digit values 
// from 1 to 4 million
for (num = 1; ; num += 1) {
  fibVal = fibo(num);
  if (fibVal >= 4000000) {
    break;
  }

  if (fibVal % 2 === 0) {
    sum += fibVal;
  }
}

console.log(sum);






